nohup: ignoring input
/opt/caoshujian/stack_gan/code/miscc/config.py:101: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  yaml_cfg = edict(yaml.load(f))
Using config:
{'CONFIG_NAME': '3stages',
 'CUDA': True,
 'DATASET_NAME': 'CUHK',
 'DATA_DIR': 'D:/NEW_HDGAN/StackGAN-v2-master/data/birds',
 'EMBEDDING_TYPE': 'cnn-rnn',
 'GAN': {'B_CONDITION': True,
         'DF_DIM': 64,
         'EMBEDDING_DIM': 128,
         'GF_DIM': 64,
         'NETWORK_TYPE': 'default',
         'R_NUM': 2,
         'Z_DIM': 100},
 'GPU_ID': '0',
 'TEST': {'B_EXAMPLE': True, 'SAMPLE_NUM': 30000},
 'TEXT': {'DIMENSION': 768},
 'TRAIN': {'BATCH_SIZE': 24,
           'COEFF': {'COLOR_LOSS': 0.0, 'KL': 2.0, 'UNCOND_LOSS': 1.0},
           'DISCRIMINATOR_LR': 0.0002,
           'FLAG': True,
           'GENERATOR_LR': 0.0002,
           'MAX_EPOCH': 600,
           'NET_D': '',
           'NET_G': '',
           'SNAPSHOT_INTERVAL': 1000,
           'VIS_COUNT': 64},
 'TREE': {'BASE_SIZE': 64,
          'BASE_SIZE_1': 64,
          'BASE_SIZE_2': 32,
          'BRANCH_NUM': 3},
 'WORKERS': 4}
/home/caoshujian/anaconda3/lib/python3.8/site-packages/torchvision/transforms/transforms.py:280: UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.
  warnings.warn(
Load filenames from: /opt/caoshujian/HD_GAN/Data/train/train_files_1w.pickle (10000)
DataParallel(
  (module): G_NET(
    (ca_net): CA_NET(
      (fc): Linear(in_features=768, out_features=512, bias=True)
      (relu): GLU()
    )
    (h_net1): INIT_STAGE_G(
      (fc): Sequential(
        (0): Linear(in_features=228, out_features=16384, bias=False)
        (1): BatchNorm1d(16384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): GLU()
      )
      (upsample1): Sequential(
        (0): Interpolate()
        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
      (upsample2): Sequential(
        (0): Interpolate()
        (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
      (upsample3): Sequential(
        (0): Interpolate()
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
      (upsample4): Sequential(
        (0): Interpolate()
        (1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
    )
    (img_net1): GET_IMAGE_G(
      (img): Sequential(
        (0): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Tanh()
      )
    )
    (h_net2): NEXT_STAGE_G(
      (jointConv): Sequential(
        (0): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): GLU()
      )
      (residual): Sequential(
        (0): ResBlock(
          (block): Sequential(
            (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): GLU()
            (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ResBlock(
          (block): Sequential(
            (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): GLU()
            (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (upsample): Sequential(
        (0): Interpolate()
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
    )
    (img_net2): GET_IMAGE_G(
      (img): Sequential(
        (0): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Tanh()
      )
    )
    (h_net3): NEXT_STAGE_G(
      (jointConv): Sequential(
        (0): Conv2d(160, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): GLU()
      )
      (residual): Sequential(
        (0): ResBlock(
          (block): Sequential(
            (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): GLU()
            (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ResBlock(
          (block): Sequential(
            (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): GLU()
            (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (upsample): Sequential(
        (0): Interpolate()
        (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): GLU()
      )
    )
    (img_net3): GET_IMAGE_G(
      (img): Sequential(
        (0): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Tanh()
      )
    )
  )
)
# of netsD 3
[1/600][416] Loss_D: 8.39 Loss_G: 18.35 Loss_KL: 0.73 lr_g: 0.00020 lr_d: 0.00020 Time: 78.56s
                                  
[2/600][416] Loss_D: 9.05 Loss_G: 29.58 Loss_KL: 0.83 lr_g: 0.00020 lr_d: 0.00020 Time: 77.25s
                                  
[3/600][416] Loss_D: 6.59 Loss_G: 25.91 Loss_KL: 1.10 lr_g: 0.00020 lr_d: 0.00020 Time: 77.78s
                                  
[4/600][416] Loss_D: 6.34 Loss_G: 21.88 Loss_KL: 1.42 lr_g: 0.00020 lr_d: 0.00020 Time: 77.01s
                                  
[5/600][416] Loss_D: 8.91 Loss_G: 37.20 Loss_KL: 1.63 lr_g: 0.00020 lr_d: 0.00020 Time: 77.55s
                                  
[6/600][416] Loss_D: 5.77 Loss_G: 21.59 Loss_KL: 1.68 lr_g: 0.00020 lr_d: 0.00020 Time: 77.15s
                                  
[7/600][416] Loss_D: 5.32 Loss_G: 26.18 Loss_KL: 1.70 lr_g: 0.00020 lr_d: 0.00020 Time: 77.18s
                                  
[8/600][416] Loss_D: 5.07 Loss_G: 26.57 Loss_KL: 1.88 lr_g: 0.00020 lr_d: 0.00020 Time: 77.95s
                                  
[9/600][416] Loss_D: 5.33 Loss_G: 42.35 Loss_KL: 2.46 lr_g: 0.00020 lr_d: 0.00020 Time: 77.23s
                                  
[10/600][416] Loss_D: 7.14 Loss_G: 27.50 Loss_KL: 2.12 lr_g: 0.00020 lr_d: 0.00020 Time: 77.85s
                                  
[11/600][416] Loss_D: 6.74 Loss_G: 24.94 Loss_KL: 2.64 lr_g: 0.00020 lr_d: 0.00020 Time: 77.27s
                                  
[12/600][416] Loss_D: 6.73 Loss_G: 29.03 Loss_KL: 2.74 lr_g: 0.00020 lr_d: 0.00020 Time: 77.23s
                                  
[13/600][416] Loss_D: 4.28 Loss_G: 39.53 Loss_KL: 2.39 lr_g: 0.00020 lr_d: 0.00020 Time: 78.03s
                                  
[14/600][416] Loss_D: 5.43 Loss_G: 34.61 Loss_KL: 3.13 lr_g: 0.00020 lr_d: 0.00020 Time: 77.21s
                                  
[15/600][416] Loss_D: 4.56 Loss_G: 34.97 Loss_KL: 3.41 lr_g: 0.00020 lr_d: 0.00020 Time: 77.95s
                                  
[16/600][416] Loss_D: 7.49 Loss_G: 44.30 Loss_KL: 3.36 lr_g: 0.00020 lr_d: 0.00020 Time: 77.22s
                                  
[17/600][416] Loss_D: 8.97 Loss_G: 32.03 Loss_KL: 3.86 lr_g: 0.00020 lr_d: 0.00020 Time: 77.71s
                                  
[18/600][416] Loss_D: 6.26 Loss_G: 44.71 Loss_KL: 3.71 lr_g: 0.00020 lr_d: 0.00020 Time: 77.25s
                                  
[19/600][416] Loss_D: 4.54 Loss_G: 38.03 Loss_KL: 3.72 lr_g: 0.00020 lr_d: 0.00020 Time: 77.20s
                                  
[20/600][416] Loss_D: 3.99 Loss_G: 39.83 Loss_KL: 3.31 lr_g: 0.00020 lr_d: 0.00020 Time: 77.94s
                                  
[21/600][416] Loss_D: 5.58 Loss_G: 28.42 Loss_KL: 3.30 lr_g: 0.00020 lr_d: 0.00020 Time: 77.21s
                                  
[22/600][416] Loss_D: 2.00 Loss_G: 45.34 Loss_KL: 4.08 lr_g: 0.00020 lr_d: 0.00020 Time: 77.82s
                                  
[23/600][416] Loss_D: 3.04 Loss_G: 43.21 Loss_KL: 4.02 lr_g: 0.00020 lr_d: 0.00020 Time: 77.13s
                                  
[24/600][416] Loss_D: 2.75 Loss_G: 36.30 Loss_KL: 4.24 lr_g: 0.00020 lr_d: 0.00020 Time: 77.49s
                                  
[25/600][416] Loss_D: 3.35 Loss_G: 30.65 Loss_KL: 4.03 lr_g: 0.00020 lr_d: 0.00020 Time: 77.70s
                                  
[26/600][416] Loss_D: 2.80 Loss_G: 29.67 Loss_KL: 4.00 lr_g: 0.00020 lr_d: 0.00020 Time: 77.17s
                                  
[27/600][416] Loss_D: 3.03 Loss_G: 48.57 Loss_KL: 4.94 lr_g: 0.00020 lr_d: 0.00020 Time: 77.72s
                                  
[28/600][416] Loss_D: 5.26 Loss_G: 33.87 Loss_KL: 4.39 lr_g: 0.00020 lr_d: 0.00020 Time: 77.23s
                                  
[29/600][416] Loss_D: 5.21 Loss_G: 43.40 Loss_KL: 5.00 lr_g: 0.00020 lr_d: 0.00020 Time: 77.80s
                                  
[30/600][416] Loss_D: 2.19 Loss_G: 42.67 Loss_KL: 4.77 lr_g: 0.00020 lr_d: 0.00020 Time: 77.16s
                                  
[31/600][416] Loss_D: 3.21 Loss_G: 34.63 Loss_KL: 5.80 lr_g: 0.00020 lr_d: 0.00020 Time: 77.18s
                                  
[32/600][416] Loss_D: 2.57 Loss_G: 35.15 Loss_KL: 5.17 lr_g: 0.00020 lr_d: 0.00020 Time: 77.70s
                                  
[33/600][416] Loss_D: 11.56 Loss_G: 70.07 Loss_KL: 5.66 lr_g: 0.00020 lr_d: 0.00020 Time: 77.30s
                                  
[34/600][416] Loss_D: 1.63 Loss_G: 40.63 Loss_KL: 5.48 lr_g: 0.00020 lr_d: 0.00020 Time: 77.68s
                                  
[35/600][416] Loss_D: 1.06 Loss_G: 52.54 Loss_KL: 5.25 lr_g: 0.00020 lr_d: 0.00020 Time: 77.17s
                                  
[36/600][416] Loss_D: 3.78 Loss_G: 42.81 Loss_KL: 5.57 lr_g: 0.00020 lr_d: 0.00020 Time: 77.13s
                                  
[37/600][416] Loss_D: 6.76 Loss_G: 61.33 Loss_KL: 5.66 lr_g: 0.00020 lr_d: 0.00020 Time: 77.77s
                                  
[38/600][416] Loss_D: 2.15 Loss_G: 30.42 Loss_KL: 5.11 lr_g: 0.00020 lr_d: 0.00020 Time: 77.14s
                                  
[39/600][416] Loss_D: 4.30 Loss_G: 43.44 Loss_KL: 6.79 lr_g: 0.00020 lr_d: 0.00020 Time: 77.70s
                                  
[40/600][416] Loss_D: 1.12 Loss_G: 50.24 Loss_KL: 6.55 lr_g: 0.00020 lr_d: 0.00020 Time: 77.24s
                                  
[41/600][416] Loss_D: 2.73 Loss_G: 38.85 Loss_KL: 7.05 lr_g: 0.00020 lr_d: 0.00020 Time: 77.69s
                                  
[42/600][416] Loss_D: 0.22 Loss_G: 57.39 Loss_KL: 6.59 lr_g: 0.00020 lr_d: 0.00020 Time: 77.17s
                                  
[43/600][416] Loss_D: 1.26 Loss_G: 70.63 Loss_KL: 5.66 lr_g: 0.00020 lr_d: 0.00020 Time: 77.20s
                                  
[44/600][416] Loss_D: 9.75 Loss_G: 54.13 Loss_KL: 6.71 lr_g: 0.00020 lr_d: 0.00020 Time: 77.76s
                                  
[45/600][416] Loss_D: 1.53 Loss_G: 39.76 Loss_KL: 6.77 lr_g: 0.00020 lr_d: 0.00020 Time: 77.21s
                                  
[46/600][416] Loss_D: 1.87 Loss_G: 48.91 Loss_KL: 7.58 lr_g: 0.00020 lr_d: 0.00020 Time: 77.77s
                                  
[47/600][416] Loss_D: 5.28 Loss_G: 41.45 Loss_KL: 7.23 lr_g: 0.00020 lr_d: 0.00020 Time: 77.12s
                                  
[48/600][416] Loss_D: 1.45 Loss_G: 64.13 Loss_KL: 7.75 lr_g: 0.00020 lr_d: 0.00020 Time: 77.18s
                                  
[49/600][416] Loss_D: 0.73 Loss_G: 42.91 Loss_KL: 9.86 lr_g: 0.00020 lr_d: 0.00020 Time: 77.73s
                                  
[50/600][416] Loss_D: 0.61 Loss_G: 45.66 Loss_KL: 8.20 lr_g: 0.00010 lr_d: 0.00010 Time: 77.16s
                                  
Save G/Ds models.
[51/600][416] Loss_D: 6.83 Loss_G: 60.61 Loss_KL: 8.89 lr_g: 0.00010 lr_d: 0.00010 Time: 77.57s
                                  
[52/600][416] Loss_D: 0.75 Loss_G: 50.95 Loss_KL: 9.46 lr_g: 0.00010 lr_d: 0.00010 Time: 77.24s
                                  
[53/600][416] Loss_D: 0.75 Loss_G: 50.15 Loss_KL: 8.27 lr_g: 0.00010 lr_d: 0.00010 Time: 77.71s
                                  
[54/600][416] Loss_D: 4.20 Loss_G: 42.93 Loss_KL: 7.44 lr_g: 0.00010 lr_d: 0.00010 Time: 77.20s
                                  
[55/600][416] Loss_D: 0.88 Loss_G: 43.36 Loss_KL: 7.27 lr_g: 0.00010 lr_d: 0.00010 Time: 77.26s
                                  
[56/600][416] Loss_D: 0.52 Loss_G: 76.11 Loss_KL: 8.33 lr_g: 0.00010 lr_d: 0.00010 Time: 77.75s
                                  
[57/600][416] Loss_D: 2.35 Loss_G: 41.61 Loss_KL: 8.43 lr_g: 0.00010 lr_d: 0.00010 Time: 77.17s
                                  
[58/600][416] Loss_D: 1.15 Loss_G: 46.55 Loss_KL: 7.50 lr_g: 0.00010 lr_d: 0.00010 Time: 77.77s
                                  
[59/600][416] Loss_D: 1.17 Loss_G: 41.39 Loss_KL: 7.89 lr_g: 0.00010 lr_d: 0.00010 Time: 77.19s
                                  
[60/600][416] Loss_D: 2.15 Loss_G: 39.86 Loss_KL: 8.22 lr_g: 0.00010 lr_d: 0.00010 Time: 77.35s
                                  
[61/600][416] Loss_D: 0.54 Loss_G: 66.98 Loss_KL: 8.95 lr_g: 0.00010 lr_d: 0.00010 Time: 77.75s
                                  
[62/600][416] Loss_D: 1.07 Loss_G: 50.49 Loss_KL: 7.64 lr_g: 0.00010 lr_d: 0.00010 Time: 77.34s
                                  
[63/600][416] Loss_D: 0.36 Loss_G: 53.73 Loss_KL: 7.55 lr_g: 0.00010 lr_d: 0.00010 Time: 77.85s
                                  
[64/600][416] Loss_D: 2.78 Loss_G: 58.60 Loss_KL: 7.78 lr_g: 0.00010 lr_d: 0.00010 Time: 77.19s
                                  
[65/600][416] Loss_D: 2.35 Loss_G: 74.14 Loss_KL: 6.39 lr_g: 0.00010 lr_d: 0.00010 Time: 77.73s
                                  
[66/600][416] Loss_D: 1.72 Loss_G: 54.15 Loss_KL: 9.22 lr_g: 0.00010 lr_d: 0.00010 Time: 77.15s
                                  
[67/600][416] Loss_D: 0.35 Loss_G: 51.41 Loss_KL: 8.31 lr_g: 0.00010 lr_d: 0.00010 Time: 77.18s
                                  
[68/600][416] Loss_D: 5.22 Loss_G: 67.57 Loss_KL: 8.47 lr_g: 0.00010 lr_d: 0.00010 Time: 77.69s
                                  
[69/600][416] Loss_D: 0.20 Loss_G: 54.44 Loss_KL: 8.47 lr_g: 0.00010 lr_d: 0.00010 Time: 77.17s
                                  
